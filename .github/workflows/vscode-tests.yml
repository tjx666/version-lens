name: Visual Studio Code Tests

on:
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - '.vscode/**'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12.x]

    runs-on: ${{ matrix.os }}

    steps:
    # checkout master
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # install
    - name: npm clean install
      run: npm ci

    # test on windows and mac
    - name: vscode tests (windows or mac)
      run: npm test
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'

    # test on linux
    - name: install packages (linux)
      run: sudo apt-get install xvfb
      if: matrix.os == 'ubuntu-latest'

    - name: vscode tests (linux)
      run: xvfb-run --auto-servernum npm test
      if: matrix.os == 'ubuntu-latest'

  vsix-artifact:
    needs: test
    strategy:
      matrix:
        node-version: [12.x]

    runs-on: ubuntu-latest

    steps:
      - run: echo "::set-env name=PKG_VERSION::$( date +%Y.%-m.%-d-build.%-H%-M )"
      - run: echo "::set-env name=VSIX_FILENAME::versionlens-${{ env.PKG_VERSION }}.vsix"

      # checkout master
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # install
      - name: npm clean install
        run: |
          npm ci
          npm i vsce -g

      # replace package.json version with x.x.x-build.*
      - name: Set package version for vsix
        run: |
          echo ${{ env.PKG_VERSION }}
          npm version --no-git-tag-version ${{ env.PKG_VERSION }}

      # package
      - name: package extension
        run: vsce package --out ${{ env.VSIX_FILENAME }}

      # save to build artifacts
      - name: Create package artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.VSIX_FILENAME }}
          path: ${{ env.VSIX_FILENAME }}
